local input_left = hash("left")
local input_right = hash("right")
local input_up = hash("up")
local input_down = hash("down")

local input_primary_hit = hash("primary_hit")


function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	print("initialized")
	msg.post(".", "acquire_input_focus")

	self.firing = false
	self.dir = vmath.vector3(0, 1, 0)


end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.firing then
		local angle = math.atan2(self.dir.y, self.dir.x)    -- [1]
		local rot = vmath.quat_rotation_z(angle)            -- [2]
		local props = { dir = self.dir }                    -- [3]
		factory.create("#rocketfactory", nil, rot, props)   -- [4]
	end
	self.firing = false
end 

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action_id == input_left then
		
		go.set_position(go.get_position() + vmath.vector3(-1, 0, 0))
	elseif action_id == input_right then
		go.set_position(go.get_position() + vmath.vector3(1, 0, 0))
	elseif action_id == input_up then
		go.set_position(go.get_position() + vmath.vector3(0, 1, 0))
	elseif action_id == input_down then
		go.set_position(go.get_position() + vmath.vector3(0, -1, 0))
	elseif action_id == input_primary_hit and action.pressed then
		print("primary_hit")
		self.firing = true
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
