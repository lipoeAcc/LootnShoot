local animation_done = hash("animation_done")

local function play_idle(self, message_id, message, sender)
	local url = msg.url("#sprite")
	print("play_idle")
	sprite.play_flipbook(url, "sword")
end

function init(self)
	self.cooldown = 2
	self.disabled = false
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if self.disabled == false then
			self.disabled = true
			timer.delay(self.cooldown, false, function() self.disabled = false end)
			
			local url = msg.url("#sprite")
			sprite.play_flipbook(url, "sword_attack",play_idle)
			msg.post("/gui#ammo", "sword_cooldown", { cooldown = self.cooldown })
		end
	
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
