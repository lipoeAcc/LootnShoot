local function die(self)
	go.delete()
end



function init(self)
	self.dir = vmath.vector3(0, 0, 0)
	self.target = vmath.vector3(0, 0, 0)
	self.health = 100

	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)


end

function fixed_update(self, dt)
	self.target = go.get_position("/player1")
	print("target ", self.target)
	local pos = go.get_position()
	print("pos ", pos)
	local result, size, total_cost, path = astar.solve(pos.x, pos.y, self.target.x, self.target.y)
	print("path ", path)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("rockets") then
			self.health = self.health - 50
			if self.health <= 0 then
				die(self)
			end
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
