local contact_point_response_hash = hash("contact_point_response")

local function set_position(self, direction, dt)
	local direction_normalized = vmath.normalize(direction)
	local position = go.get_position() + direction_normalized * self.speed * dt
	go.set_position(position)
	-- lookup if there is a collision to wall
end

function init(self)
	self.dir = vmath.vector3(0, 0, 0)
	self.speed = 50
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	set_position(self, vmath.vector3(0, -1, 0), dt)

end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	print(message_id)
	if message_id == contact_point_response_hash then
		print("contact")
		self.dir = vmath.vector3(0, 0, 0)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
