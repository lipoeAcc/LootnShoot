local create_snake = hash("create_snake")
local spawn_random_enemy_hash = hash("spawn_random_enemy")

local function spawn_random_enemy(self, position)
	local enemy = self.enemies[math.random(1, #self.enemies)]
	collectionfactory.create(enemy.factory, position)
end

function init(self)
	self.enemies = {
		{factory="#snakefactory", spawnrate=5},
		{factory="#scorpiofactory", spawnrate=2}
	}
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    if message_id == create_snake then
		collectionfactory.create("#snakefactory", vmath.vector3(500, 0, 0))
		collectionfactory.create("#snakefactory", vmath.vector3(500, 5, 0))
	elseif message_id == spawn_random_enemy_hash then 
		spawn_random_enemy(self, message.position)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
