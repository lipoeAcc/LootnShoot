local function set_time(self)
	gui.set_text(self.timer_node, string.format("%d:%.1f", self.time_difficulty.min, self.time_difficulty.sec))
end
local function update_time(self, dt)
	-- update the time
	-- increment in seconds
self.time_difficulty.sec = self.time_difficulty.sec + dt
	if self.time_difficulty.sec >= 60 then
		self.time_difficulty.sec = 0
		self.time_difficulty.min = self.time_difficulty.min + 1
		if self.time_difficulty.min >= 60 then
			self.time_difficulty.min = 0
		end
	end
end

function init(self)
	-- get node time and start the timer
	self.time_difficulty = {}
	self.time_difficulty.min = 0
	self.time_difficulty.sec = 0
	self.time_difficulty.m_sec = 0

	-- get the node position
	self.timer_node = gui.get_node("time_difficulty")
	gui.set_color(self.timer_node, vmath.vector4(1, 1, 1, 1))

	timer.delay(0.1, true, function()
		update_time(self, 0.1)
		set_time(self)
	end)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
